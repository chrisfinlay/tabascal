[build-system]
# XXX: If your project needs other packages to build properly, add them to this list.
requires = ["setuptools >= 64"]
build-backend = "setuptools.build_meta"

[project]
name = "tabascal"
version = "0.0.1"
license = {file = "LICENSE"}
readme = "README.md"
# dynamic = ["version", "readme"]
authors = [
  {name = "Chris Finlay", email = "christopher.finlay@epfl.ch"},
]
maintainers = [
  {name = "Chris Finlay", email = "christopher.finlay@epfl.ch"}
]
description = "Trajectory based Radio Frequency Interference (RFI) subtraction and calibration using Bayesian methods for radio interferometeric data."

requires-python = ">=3.9,<3.13"
dependencies = [
    "jax", "dask<=2024.10.0", "xarray", "zarr<3.0.0", 
    "dask-ms>=0.2.21", "scipy", "tqdm", "pandas", 
    "matplotlib", "astropy", "requests", "spacetrack",
    "skyfield", "numpy<2.0.0"
]

[project.optional-dependencies]
gpu = ["jax[cuda12]"]
sat = ["regions"]
astro = ["bdsf"]
opt = ["frozendict", "tab_opt @ git+https://github.com/chrisfinlay/tab_opt.git"]
ps = ["TGEpy @ git+https://github.com/chrisfinlay/TGEpy.git"]
all = ["jax[cuda12]", "regions", "bdsf", "TGEpy @ git+https://github.com/chrisfinlay/TGEpy.git"]
all_cpu = ["regions", "bdsf", "TGEpy @ git+https://github.com/chrisfinlay/TGEpy.git"]
ipy = ["ipython", "ipykernel"]

[project.urls]
# Homepage = "https://example.com"
Documentation = "https://tabascal.readthedocs.io/en/latest/"
Repository = "https://github.com/chrisfinlay/tabascal.git"

[tool.setuptools.package-data]
tabascal = ["tabascal/data/*"]

[tool.setuptools.packages]
find = {}

[project.scripts]
# Not Needed
# sim-target = "tabascal.examples.target_observation:main"
# sim-calib = "tabascal.examples.calibration_observation:main"
# sim-mixed = "tabascal.examples.mixed_source_observation:main"
# sim-low = "tabascal.examples.low_freq_obs:main"
# Useful extras
tle-region = "tabascal.utils.tle_sat_region:main"
sat-region = "tabascal.utils.sat_region:main"
ast-region = "tabascal.utils.ast_region:main"
# Base scripts
tab2MS="tabascal.utils.results_to_MS:main"
flag-data = "tabascal.utils.flag_data:main"
image = "tabascal.utils.wsclean_image:main"
src-extract = "tabascal.utils.extract:main"
# Config enabled
ps-extract = "tabascal.utils.power_spectrum:main"
sim-vis = "tabascal.utils.sim_vis:main"
tabascal = "tabascal.utils.run_tabascal:main"
extract = "tabascal.utils.run_extraction:main"
end2end = "tabascal.utils.end2end:main"
ps-end2end = "tabascal.utils.end2end_pow_spec:main"
plot =  "tabascal.utils.plot_results:main"
